<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on Coder Memo</title>
    <link>https://eliauk2021.github.io/tags/golang/</link>
    <description>Recent content in golang on Coder Memo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 07 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eliauk2021.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go语言简介</title>
      <link>https://eliauk2021.github.io/2021/09/go%E8%AF%AD%E8%A8%80%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Tue, 07 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://eliauk2021.github.io/2021/09/go%E8%AF%AD%E8%A8%80%E7%AE%80%E4%BB%8B/</guid>
      <description>Go是一种开源系统编程语言，最初作为谷歌内部项目开发，并于2009年发布。
应用领域  专业的web服务 网络工具和服务器，如Kubernetes和Istio 后端系统 系统组件 强大的命令行实用程序，如docker和hugo 以JSON格式交换数据（来自关系数据库、NoSQL数据库或其他流行的数据存储系统）的应用程序 作为用户所设计的编程语言的编译器和解释器 数据库系统（如CockroachDB）和键/值存储（如etcd  相对于其他编程语言，Go语言有如下优点  Go编译器的默认行为可以捕获大量可能导致bug的愚蠢错误。 GO使用的括号比C、C++或java少，而且没有分号，这使得GO源代码的外观更具可读性，而且不易出错。 Go提供了丰富可靠的标准库。 Go通过goroutines和Channel支持开箱即用的并发性。 Goroutines十分轻量级。可以轻松地在任何现代机器上运行数千个goroutine，而不会出现任何性能问题。 与C不同，Go支持函数式编程。 Go代码是向后兼容的。  </description>
    </item>
    
  </channel>
</rss>
